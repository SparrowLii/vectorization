// MIR for `use_iter` before PreCodegen

fn use_iter() -> () {
    let mut _0: ();                      // return place in scope 0 at iter_simd.rs:6:19: 6:19
    let mut _1: [u8; 224];               // in scope 0 at iter_simd.rs:7:9: 7:16
    let mut _4: &[u32];                  // in scope 0 at iter_simd.rs:9:19: 9:49
    let mut _5: &[u32; 224];             // in scope 0 at iter_simd.rs:9:19: 9:49
    let _6: [u32; 224];                  // in scope 0 at iter_simd.rs:9:19: 9:40
    let mut _7: [u8; 224];               // in scope 0 at iter_simd.rs:9:19: 9:22
    let mut _8: [closure@iter_simd.rs:9:27: 9:39]; // in scope 0 at iter_simd.rs:9:27: 9:39
    let _9: ();                          // in scope 0 at iter_simd.rs:10:5: 10:37
    let mut _10: &[u8];                  // in scope 0 at iter_simd.rs:10:11: 10:19
    let mut _11: &[u8; 224];             // in scope 0 at iter_simd.rs:10:11: 10:19
    let _12: &mut [u8; 224];             // in scope 0 at iter_simd.rs:10:11: 10:19
    let mut _13: &[u32];                 // in scope 0 at iter_simd.rs:10:21: 10:26
    let mut _14: &[u32; 224];            // in scope 0 at iter_simd.rs:10:21: 10:26
    let _15: &[u32; 224];                // in scope 0 at iter_simd.rs:10:21: 10:26
    let mut _16: &mut [u32];             // in scope 0 at iter_simd.rs:10:28: 10:36
    let mut _17: &mut [u32];             // in scope 0 at iter_simd.rs:10:28: 10:36
    let mut _18: &mut std::vec::Vec<u32>; // in scope 0 at iter_simd.rs:10:28: 10:36
    let mut _19: &mut std::vec::Vec<u32>; // in scope 0 at iter_simd.rs:10:28: 10:36
    let _20: ();                         // in scope 0 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:9: 97:62
    let mut _21: std::fmt::Arguments;    // in scope 0 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
    let mut _22: &[&str];                // in scope 0 at iter_simd.rs:12:14: 12:18
    let mut _23: &[&str; 2];             // in scope 0 at iter_simd.rs:12:14: 12:18
    let _24: &[&str; 2];                 // in scope 0 at iter_simd.rs:12:14: 12:18
    let mut _25: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
    let mut _26: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
    let _27: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
    let _28: [std::fmt::ArgumentV1; 1];  // in scope 0 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
    let mut _29: (&u32,);                // in scope 0 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
    let mut _30: &u32;                   // in scope 0 at iter_simd.rs:12:20: 12:26
    let _31: &u32;                       // in scope 0 at iter_simd.rs:12:20: 12:26
    let mut _32: &std::vec::Vec<u32>;    // in scope 0 at iter_simd.rs:12:20: 12:23
    let mut _34: std::fmt::ArgumentV1;   // in scope 0 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
    let mut _35: &u32;                   // in scope 0 at iter_simd.rs:12:20: 12:26
    let mut _36: for<'r, 's, 't0> fn(&'r u32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at iter_simd.rs:12:20: 12:26
    scope 1 {
        debug src => _1;                 // in scope 1 at iter_simd.rs:7:9: 7:16
        let mut _2: [u32; 224];          // in scope 1 at iter_simd.rs:8:9: 8:17
        scope 2 {
            debug src2 => _2;            // in scope 2 at iter_simd.rs:8:9: 8:17
            let mut _3: std::vec::Vec<u32>; // in scope 2 at iter_simd.rs:9:9: 9:16
            scope 3 {
                debug val => _3;         // in scope 3 at iter_simd.rs:9:9: 9:16
                let _33: (&u32,);        // in scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
                let mut _37: &[&str; 2]; // in scope 3 at iter_simd.rs:12:14: 12:18
                scope 4 {
                    debug _args => _33;  // in scope 4 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
                }
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at iter_simd.rs:7:9: 7:16
        _1 = [const 0_u8; 224];          // scope 0 at iter_simd.rs:7:30: 7:38
        StorageLive(_2);                 // scope 1 at iter_simd.rs:8:9: 8:17
        _2 = [const 0_u32; 224];         // scope 1 at iter_simd.rs:8:32: 8:40
        StorageLive(_3);                 // scope 2 at iter_simd.rs:9:9: 9:16
        StorageLive(_4);                 // scope 2 at iter_simd.rs:9:19: 9:49
        StorageLive(_5);                 // scope 2 at iter_simd.rs:9:19: 9:49
        StorageLive(_6);                 // scope 2 at iter_simd.rs:9:19: 9:40
        StorageLive(_7);                 // scope 2 at iter_simd.rs:9:19: 9:22
        _7 = _1;                         // scope 2 at iter_simd.rs:9:19: 9:22
        StorageLive(_8);                 // scope 2 at iter_simd.rs:9:27: 9:39
        _6 = array::<impl [u8; 224]>::map::<[closure@iter_simd.rs:9:27: 9:39], u32>(move _7, move _8) -> bb1; // scope 2 at iter_simd.rs:9:19: 9:40
                                         // mir::Constant
                                         // + span: iter_simd.rs:9:23: 9:26
                                         // + literal: Const { ty: fn([u8; 224], [closure@iter_simd.rs:9:27: 9:39]) -> [u32; 224] {std::array::<impl [u8; 224]>::map::<[closure@iter_simd.rs:9:27: 9:39], u32>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _5 = &_6;                        // scope 2 at iter_simd.rs:9:19: 9:49
        _4 = move _5 as &[u32] (Pointer(Unsize)); // scope 2 at iter_simd.rs:9:19: 9:49
        StorageDead(_8);                 // scope 2 at iter_simd.rs:9:39: 9:40
        StorageDead(_7);                 // scope 2 at iter_simd.rs:9:39: 9:40
        StorageDead(_5);                 // scope 2 at iter_simd.rs:9:39: 9:40
        _3 = slice::<impl [u32]>::to_vec(move _4) -> bb2; // scope 2 at iter_simd.rs:9:19: 9:49
                                         // mir::Constant
                                         // + span: iter_simd.rs:9:41: 9:47
                                         // + literal: Const { ty: for<'r> fn(&'r [u32]) -> std::vec::Vec<u32> {std::slice::<impl [u32]>::to_vec}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_4);                 // scope 2 at iter_simd.rs:9:48: 9:49
        StorageDead(_6);                 // scope 2 at iter_simd.rs:9:49: 9:50
        StorageLive(_9);                 // scope 3 at iter_simd.rs:10:5: 10:37
        StorageLive(_10);                // scope 3 at iter_simd.rs:10:11: 10:19
        StorageLive(_11);                // scope 3 at iter_simd.rs:10:11: 10:19
        StorageLive(_12);                // scope 3 at iter_simd.rs:10:11: 10:19
        _12 = &mut _1;                   // scope 3 at iter_simd.rs:10:11: 10:19
        _11 = &(*_12);                   // scope 3 at iter_simd.rs:10:11: 10:19
        _10 = move _11 as &[u8] (Pointer(Unsize)); // scope 3 at iter_simd.rs:10:11: 10:19
        StorageDead(_11);                // scope 3 at iter_simd.rs:10:18: 10:19
        StorageLive(_13);                // scope 3 at iter_simd.rs:10:21: 10:26
        StorageLive(_14);                // scope 3 at iter_simd.rs:10:21: 10:26
        StorageLive(_15);                // scope 3 at iter_simd.rs:10:21: 10:26
        _15 = &_2;                       // scope 3 at iter_simd.rs:10:21: 10:26
        _14 = _15;                       // scope 3 at iter_simd.rs:10:21: 10:26
        _13 = move _14 as &[u32] (Pointer(Unsize)); // scope 3 at iter_simd.rs:10:21: 10:26
        StorageDead(_14);                // scope 3 at iter_simd.rs:10:25: 10:26
        StorageLive(_16);                // scope 3 at iter_simd.rs:10:28: 10:36
        StorageLive(_17);                // scope 3 at iter_simd.rs:10:28: 10:36
        StorageLive(_18);                // scope 3 at iter_simd.rs:10:28: 10:36
        StorageLive(_19);                // scope 3 at iter_simd.rs:10:28: 10:36
        _19 = &mut _3;                   // scope 3 at iter_simd.rs:10:28: 10:36
        _18 = &mut (*_19);               // scope 3 at iter_simd.rs:10:28: 10:36
        _17 = <Vec<u32> as DerefMut>::deref_mut(move _18) -> [return: bb3, unwind: bb10]; // scope 3 at iter_simd.rs:10:28: 10:36
                                         // mir::Constant
                                         // + span: iter_simd.rs:10:28: 10:36
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::vec::Vec<u32>) -> &'r mut <std::vec::Vec<u32> as std::ops::Deref>::Target {<std::vec::Vec<u32> as std::ops::DerefMut>::deref_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        _16 = &mut (*_17);               // scope 3 at iter_simd.rs:10:28: 10:36
        StorageDead(_18);                // scope 3 at iter_simd.rs:10:35: 10:36
        _9 = iter_simd::func1(move _10, move _13, move _16) -> [return: bb4, unwind: bb10]; // scope 3 at iter_simd.rs:10:5: 10:37
                                         // mir::Constant
                                         // + span: iter_simd.rs:10:5: 10:10
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r [u8], &'s [u32], &'t0 mut [u32]) {iter_simd::func1}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_16);                // scope 3 at iter_simd.rs:10:36: 10:37
        StorageDead(_13);                // scope 3 at iter_simd.rs:10:36: 10:37
        StorageDead(_10);                // scope 3 at iter_simd.rs:10:36: 10:37
        StorageDead(_19);                // scope 3 at iter_simd.rs:10:37: 10:38
        StorageDead(_17);                // scope 3 at iter_simd.rs:10:37: 10:38
        StorageDead(_15);                // scope 3 at iter_simd.rs:10:37: 10:38
        StorageDead(_12);                // scope 3 at iter_simd.rs:10:37: 10:38
        StorageDead(_9);                 // scope 3 at iter_simd.rs:10:37: 10:38
        StorageLive(_20);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:9: 97:62
        StorageLive(_21);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageLive(_22);                // scope 3 at iter_simd.rs:12:14: 12:18
        StorageLive(_23);                // scope 3 at iter_simd.rs:12:14: 12:18
        StorageLive(_24);                // scope 3 at iter_simd.rs:12:14: 12:18
        _37 = const use_iter::promoted[0]; // scope 3 at iter_simd.rs:12:14: 12:18
                                         // ty::Const
                                         // + ty: &[&str; 2]
                                         // + val: Unevaluated(use_iter, [], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: iter_simd.rs:12:14: 12:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:33 ~ main[8185]::iter_simd::use_iter), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[0]) }) }
        _24 = _37;                       // scope 3 at iter_simd.rs:12:14: 12:18
        _23 = _24;                       // scope 3 at iter_simd.rs:12:14: 12:18
        _22 = move _23 as &[&str] (Pointer(Unsize)); // scope 3 at iter_simd.rs:12:14: 12:18
        StorageDead(_23);                // scope 3 at iter_simd.rs:12:17: 12:18
        StorageLive(_25);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageLive(_26);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageLive(_27);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageLive(_28);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageLive(_29);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageLive(_30);                // scope 3 at iter_simd.rs:12:20: 12:26
        StorageLive(_31);                // scope 3 at iter_simd.rs:12:20: 12:26
        StorageLive(_32);                // scope 3 at iter_simd.rs:12:20: 12:23
        _32 = &_3;                       // scope 3 at iter_simd.rs:12:20: 12:23
        _31 = <Vec<u32> as Index<usize>>::index(move _32, const 0_usize) -> [return: bb5, unwind: bb10]; // scope 3 at iter_simd.rs:12:20: 12:26
                                         // mir::Constant
                                         // + span: iter_simd.rs:12:20: 12:26
                                         // + literal: Const { ty: for<'r> fn(&'r std::vec::Vec<u32>, usize) -> &'r <std::vec::Vec<u32> as std::ops::Index<usize>>::Output {<std::vec::Vec<u32> as std::ops::Index<usize>>::index}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_32);                // scope 3 at iter_simd.rs:12:25: 12:26
        _30 = _31;                       // scope 3 at iter_simd.rs:12:20: 12:26
        (_29.0: &u32) = move _30;        // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageDead(_30);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:60: 97:61
        StorageLive(_33);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        _33 = _29;                       // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageLive(_34);                // scope 4 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageLive(_35);                // scope 4 at iter_simd.rs:12:20: 12:26
        _35 = (_33.0: &u32);             // scope 4 at iter_simd.rs:12:20: 12:26
        StorageLive(_36);                // scope 4 at iter_simd.rs:12:20: 12:26
        _36 = <u32 as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r u32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 4 at iter_simd.rs:12:20: 12:26
                                         // mir::Constant
                                         // + span: iter_simd.rs:12:20: 12:26
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r u32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<u32 as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _34 = ArgumentV1::new::<u32>(move _35, move _36) -> [return: bb6, unwind: bb10]; // scope 4 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b u32, for<'r, 's, 't0> fn(&'r u32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<u32>}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        StorageDead(_36);                // scope 4 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:60: 97:61
        StorageDead(_35);                // scope 4 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:60: 97:61
        _28 = [move _34];                // scope 4 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageDead(_34);                // scope 4 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:60: 97:61
        StorageDead(_33);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:60: 97:61
        _27 = &_28;                      // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        _26 = _27;                       // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        _25 = move _26 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
        StorageDead(_26);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:60: 97:61
        _21 = Arguments::new_v1(move _22, move _25) -> [return: bb7, unwind: bb10]; // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:28: 97:61
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        StorageDead(_25);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:60: 97:61
        StorageDead(_22);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:60: 97:61
        _20 = _print(move _21) -> [return: bb8, unwind: bb10]; // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        StorageDead(_21);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:61: 97:62
        StorageDead(_31);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:62: 97:63
        StorageDead(_29);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:62: 97:63
        StorageDead(_28);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:62: 97:63
        StorageDead(_27);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:62: 97:63
        StorageDead(_24);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:62: 97:63
        StorageDead(_20);                // scope 3 at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\library\std\src\macros.rs:97:62: 97:63
        drop(_3) -> bb9;                 // scope 2 at iter_simd.rs:13:1: 13:2
    }

    bb9: {
        StorageDead(_3);                 // scope 2 at iter_simd.rs:13:1: 13:2
        StorageDead(_2);                 // scope 1 at iter_simd.rs:13:1: 13:2
        StorageDead(_1);                 // scope 0 at iter_simd.rs:13:1: 13:2
        return;                          // scope 0 at iter_simd.rs:13:2: 13:2
    }

    bb10 (cleanup): {
        drop(_3) -> bb11;                // scope 2 at iter_simd.rs:13:1: 13:2
    }

    bb11 (cleanup): {
        resume;                          // scope 0 at iter_simd.rs:6:1: 13:2
    }
}
